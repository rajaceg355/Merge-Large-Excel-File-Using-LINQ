<Activity mc:Ignorable="sap sap2010" x:Class="AppendAmountColumn" this:AppendAmountColumn.targetAmountColumnName="Cash Amount" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="targetDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="sourceDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="targetAmountColumnName" Type="InArgument(x:String)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>574.666666666667,705.333333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="376,640.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:AddDataColumn x:TypeArguments="x:Double" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="[targetAmountColumnName]" DataTable="[targetDT]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="334,190" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" />
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="var query = from row in TargetDT.AsEnumerable()&#xD;&#xA;&#x9;                group row by row.Field&lt;double&gt;(&quot;compnumber&quot;) into g&#xD;&#xA;&#x9;               select g;&#xD;&#xA;            foreach(var g in query){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var compoundquery = from row2 in SourceDT.AsEnumerable()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;                                where(row2.Field&lt;double&gt;(&quot;compnumber&quot;)==g.Key) //(== in csharp it meants to equal)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/*from row2 in SourceDT.AsEnumerable()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;                                where(row2.Field&lt;double&gt;(&quot;compnumber&quot;)==g.Key)*/ //It will run first&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;                                 from row1 in g // get each row value , match with Filtered row2  if match na &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;                                where (row2.Field&lt;DateTime&gt;(&quot;reportdate&quot;).Year == row1.Field&lt;DateTime&gt;(&quot;reportdate&quot;).Year) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;                               select new{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;TargetRow = row1,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; SourceRow = row2&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   };&#xD;&#xA;&#x9;               foreach(var kvp in compoundquery){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;   &#x9;kvp.TargetRow[TargetColumn] = kvp.SourceRow[&quot;amount&quot;]; //It adds value to the TargetDT(2 row matched na takes last row value)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;   };&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;TargetDT.Columns[TargetColumn].SetOrdinal(4);&#xD;&#xA;&#x9;&#x9;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="TargetDT">
          <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="targetDT" />
        </InArgument>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="SourceDT">
          <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="sourceDT" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="TargetColumn">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="targetAmountColumnName" />
        </InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[targetDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" WorkbookPath="Final.xlsx" />
  </Sequence>
</Activity>